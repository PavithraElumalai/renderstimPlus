apiVersion: v1 # This is a jupyter notebook deployment. Study well
kind: Pod
metadata:
  name: nknotebook
  labels:
    app: nikos-jupyter-labx
spec:
  restartPolicy: Never # Options are OnFailure, and Never.
  hostNetwork: true # This option will allow the pod to use the host network for internet access
  tolerations: # This toleration allows the pod to be schedule onto gpu-only pod machines, remove this if you are not using gpu
  - key: "gpu"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  - key: "nikos-reserve"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"
  volumes: # Example volume mounting for scratch07
  - name: bg_textures # name for the volume to be reference in container volumeMounts
    hostPath:
      path: /mnt/scratch05/rendered_stimuli/bg_textures # Directory on the host machine to be mounted
  - name: obj_textures # name for the volume to be reference in container volumeMounts
    hostPath:
      path: /mnt/scratch05/rendered_stimuli/obj_textures # Directory on the host machine to be mounted
  - name: external
    hostPath:
      path: /mnt/dj-stor01/
  - name: project
    hostPath:
      path: /mnt/scratch05/rendered_stimuli/renderstim
  affinity: # Affinity to select certain nodes with 11GB, 12GB, or 24GB memory
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution: # Require nodes to have this label
        nodeSelectorTerms:
        - matchExpressions:
          - key: gpu_mem_size # Target label is gpu_mem_size
            operator: In # Key must have one of the following values
            values:
             #- 11GB
             #- 12GB
             - 24GB
             #- 32GB     
          #- key: kubernetes.io/hostname # Target label is gpu_mem_size
            #operator: In # Key must have one of the following values
            #values:
            #- nikosk
  containers: # Container Level
  - name: pytorch # Container name (Can be set to whatever)
    image: at-docker:5000/nkrender:latest
    ports:
    - containerPort: 8888
    resources:
      limits:
        nvidia.com/gpu: 1 # requesting 1 GPUs
    volumeMounts: # Container reference to volumes define above
    - name: bg_textures 
      mountPath: /mnt/bg_textures
    - name: obj_textures # Name of the volume define above
      mountPath: /mnt/obj_textures # Location of where to mount it in the container
    - name: external
      mountPath: /external
    - name: project
      mountPath: /project
    env: # This section refers to secrets created under the user namespace and set them as enviorment variables
    - name: DJ_HOST
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_HOST
    - name: DJ_USER
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_USER
    - name: DJ_PASS
      valueFrom:
        secretKeyRef:
          name: datajoint-credentials
          key: DJ_PASS
    - name: GITHUB_USERNAME
      valueFrom:
        secretKeyRef:
          name: github-credentials
          key: GITHUB_USERNAME
    - name: GITHUB_PASSWORD
      valueFrom:
        secretKeyRef:
          name: github-credentials
          key: GITHUB_PASSWORD
    command: ["/bin/bash"] # Entry point for the container
    args: ["-c", "jupyter lab --ip='0.0.0.0' --port=8888 --allow-root --no-browser --NotebookApp.token=''"]
---
apiVersion: v1
kind: Service
metadata:
    name: nikos-jupyter-labx
spec:
    type: NodePort
    selector:
      app: nikos-jupyter-labx
    ports:
    - protocol: TCP
      port: 8888
      targetPort: 8888
